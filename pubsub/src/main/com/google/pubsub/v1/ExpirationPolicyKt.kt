//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google/pubsub/v1/pubsub.proto

package com.google.pubsub.v1;

@kotlin.jvm.JvmSynthetic
inline fun expirationPolicy(block: com.google.pubsub.v1.ExpirationPolicyKt.Dsl.() -> Unit): com.google.pubsub.v1.ExpirationPolicy =
  com.google.pubsub.v1.ExpirationPolicyKt.Dsl._create(com.google.pubsub.v1.ExpirationPolicy.newBuilder()).apply { block() }._build()
object ExpirationPolicyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: com.google.pubsub.v1.ExpirationPolicy.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.pubsub.v1.ExpirationPolicy.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.pubsub.v1.ExpirationPolicy = _builder.build()

    /**
     * <pre>
     * Specifies the "time-to-live" duration for an associated resource. The
     * resource expires if it is not active for a period of `ttl`. The definition
     * of "activity" depends on the type of the associated resource. The minimum
     * and maximum allowed values for `ttl` depend on the type of the associated
     * resource, as well. If `ttl` is not set, the associated resource never
     * expires.
     * </pre>
     *
     * <code>.google.protobuf.Duration ttl = 1;</code>
     */
    var ttl: com.google.protobuf.Duration
      @JvmName("getTtl")
      get() = _builder.getTtl()
      @JvmName("setTtl")
      set(value) {
        _builder.setTtl(value)
      }
    /**
     * <pre>
     * Specifies the "time-to-live" duration for an associated resource. The
     * resource expires if it is not active for a period of `ttl`. The definition
     * of "activity" depends on the type of the associated resource. The minimum
     * and maximum allowed values for `ttl` depend on the type of the associated
     * resource, as well. If `ttl` is not set, the associated resource never
     * expires.
     * </pre>
     *
     * <code>.google.protobuf.Duration ttl = 1;</code>
     */
    fun clearTtl() {
      _builder.clearTtl()
    }
    /**
     * <pre>
     * Specifies the "time-to-live" duration for an associated resource. The
     * resource expires if it is not active for a period of `ttl`. The definition
     * of "activity" depends on the type of the associated resource. The minimum
     * and maximum allowed values for `ttl` depend on the type of the associated
     * resource, as well. If `ttl` is not set, the associated resource never
     * expires.
     * </pre>
     *
     * <code>.google.protobuf.Duration ttl = 1;</code>
     * @return Whether the ttl field is set.
     */
    fun hasTtl(): kotlin.Boolean {
      return _builder.hasTtl()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.google.pubsub.v1.ExpirationPolicy.copy(block: com.google.pubsub.v1.ExpirationPolicyKt.Dsl.() -> Unit): com.google.pubsub.v1.ExpirationPolicy =
  com.google.pubsub.v1.ExpirationPolicyKt.Dsl._create(this.toBuilder()).apply { block() }._build()
