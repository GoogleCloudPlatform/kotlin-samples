//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google/pubsub/v1/pubsub.proto

package com.google.pubsub.v1;

@kotlin.jvm.JvmSynthetic
inline fun topic(block: com.google.pubsub.v1.TopicKt.Dsl.() -> Unit): com.google.pubsub.v1.Topic =
  com.google.pubsub.v1.TopicKt.Dsl._create(com.google.pubsub.v1.Topic.newBuilder()).apply { block() }._build()
object TopicKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: com.google.pubsub.v1.Topic.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.pubsub.v1.Topic.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.pubsub.v1.Topic = _builder.build()

    /**
     * <pre>
     * Required. The name of the topic. It must have the format
     * `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
     * and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
     * underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
     * signs (`%`). It must be between 3 and 255 characters in length, and it
     * must not start with `"goog"`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <pre>
     * Required. The name of the topic. It must have the format
     * `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
     * and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
     * underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
     * signs (`%`). It must be between 3 and 255 characters in length, and it
     * must not start with `"goog"`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    fun clearName() {
      _builder.clearName()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class LabelsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * See [Creating and managing labels]
     * (https://cloud.google.com/pubsub/docs/labels).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
     val labels: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, LabelsProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getLabelsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getLabelsMap()
      )
    /**
     * <pre>
     * See [Creating and managing labels]
     * (https://cloud.google.com/pubsub/docs/labels).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @JvmName("putLabels")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, LabelsProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putLabels(key, value)
       }
    /**
     * <pre>
     * See [Creating and managing labels]
     * (https://cloud.google.com/pubsub/docs/labels).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setLabels")
    inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, LabelsProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <pre>
     * See [Creating and managing labels]
     * (https://cloud.google.com/pubsub/docs/labels).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeLabels")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, LabelsProxy>
      .remove(key: kotlin.String) {
         _builder.removeLabels(key)
       }
    /**
     * <pre>
     * See [Creating and managing labels]
     * (https://cloud.google.com/pubsub/docs/labels).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllLabels")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, LabelsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllLabels(map)
       }
    /**
     * <pre>
     * See [Creating and managing labels]
     * (https://cloud.google.com/pubsub/docs/labels).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearLabels")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, LabelsProxy>
      .clear() {
         _builder.clearLabels()
       }

    /**
     * <pre>
     * Policy constraining the set of Google Cloud Platform regions where messages
     * published to the topic may be stored. If not present, then no constraints
     * are in effect.
     * </pre>
     *
     * <code>.google.pubsub.v1.MessageStoragePolicy message_storage_policy = 3;</code>
     */
    var messageStoragePolicy: com.google.pubsub.v1.MessageStoragePolicy
      @JvmName("getMessageStoragePolicy")
      get() = _builder.getMessageStoragePolicy()
      @JvmName("setMessageStoragePolicy")
      set(value) {
        _builder.setMessageStoragePolicy(value)
      }
    /**
     * <pre>
     * Policy constraining the set of Google Cloud Platform regions where messages
     * published to the topic may be stored. If not present, then no constraints
     * are in effect.
     * </pre>
     *
     * <code>.google.pubsub.v1.MessageStoragePolicy message_storage_policy = 3;</code>
     */
    fun clearMessageStoragePolicy() {
      _builder.clearMessageStoragePolicy()
    }
    /**
     * <pre>
     * Policy constraining the set of Google Cloud Platform regions where messages
     * published to the topic may be stored. If not present, then no constraints
     * are in effect.
     * </pre>
     *
     * <code>.google.pubsub.v1.MessageStoragePolicy message_storage_policy = 3;</code>
     * @return Whether the messageStoragePolicy field is set.
     */
    fun hasMessageStoragePolicy(): kotlin.Boolean {
      return _builder.hasMessageStoragePolicy()
    }

    /**
     * <pre>
     * The resource name of the Cloud KMS CryptoKey to be used to protect access
     * to messages published on this topic.
     * The expected format is `projects/&#42;&#47;locations/&#42;&#47;keyRings/&#42;&#47;cryptoKeys/&#42;`.
     * </pre>
     *
     * <code>string kms_key_name = 5;</code>
     */
    var kmsKeyName: kotlin.String
      @JvmName("getKmsKeyName")
      get() = _builder.getKmsKeyName()
      @JvmName("setKmsKeyName")
      set(value) {
        _builder.setKmsKeyName(value)
      }
    /**
     * <pre>
     * The resource name of the Cloud KMS CryptoKey to be used to protect access
     * to messages published on this topic.
     * The expected format is `projects/&#42;&#47;locations/&#42;&#47;keyRings/&#42;&#47;cryptoKeys/&#42;`.
     * </pre>
     *
     * <code>string kms_key_name = 5;</code>
     */
    fun clearKmsKeyName() {
      _builder.clearKmsKeyName()
    }

    /**
     * <pre>
     * Settings for validating messages published against a schema.
     * </pre>
     *
     * <code>.google.pubsub.v1.SchemaSettings schema_settings = 6;</code>
     */
    var schemaSettings: com.google.pubsub.v1.SchemaSettings
      @JvmName("getSchemaSettings")
      get() = _builder.getSchemaSettings()
      @JvmName("setSchemaSettings")
      set(value) {
        _builder.setSchemaSettings(value)
      }
    /**
     * <pre>
     * Settings for validating messages published against a schema.
     * </pre>
     *
     * <code>.google.pubsub.v1.SchemaSettings schema_settings = 6;</code>
     */
    fun clearSchemaSettings() {
      _builder.clearSchemaSettings()
    }
    /**
     * <pre>
     * Settings for validating messages published against a schema.
     * </pre>
     *
     * <code>.google.pubsub.v1.SchemaSettings schema_settings = 6;</code>
     * @return Whether the schemaSettings field is set.
     */
    fun hasSchemaSettings(): kotlin.Boolean {
      return _builder.hasSchemaSettings()
    }

    /**
     * <pre>
     * Reserved for future use. This field is set only in responses from the
     * server; it is ignored if it is set in any requests.
     * </pre>
     *
     * <code>bool satisfies_pzs = 7;</code>
     */
    var satisfiesPzs: kotlin.Boolean
      @JvmName("getSatisfiesPzs")
      get() = _builder.getSatisfiesPzs()
      @JvmName("setSatisfiesPzs")
      set(value) {
        _builder.setSatisfiesPzs(value)
      }
    /**
     * <pre>
     * Reserved for future use. This field is set only in responses from the
     * server; it is ignored if it is set in any requests.
     * </pre>
     *
     * <code>bool satisfies_pzs = 7;</code>
     */
    fun clearSatisfiesPzs() {
      _builder.clearSatisfiesPzs()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.google.pubsub.v1.Topic.copy(block: com.google.pubsub.v1.TopicKt.Dsl.() -> Unit): com.google.pubsub.v1.Topic =
  com.google.pubsub.v1.TopicKt.Dsl._create(this.toBuilder()).apply { block() }._build()
