//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google/pubsub/v1/pubsub.proto

package com.google.pubsub.v1;

@kotlin.jvm.JvmSynthetic
inline fun createSnapshotRequest(block: com.google.pubsub.v1.CreateSnapshotRequestKt.Dsl.() -> Unit): com.google.pubsub.v1.CreateSnapshotRequest =
  com.google.pubsub.v1.CreateSnapshotRequestKt.Dsl._create(com.google.pubsub.v1.CreateSnapshotRequest.newBuilder()).apply { block() }._build()
object CreateSnapshotRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: com.google.pubsub.v1.CreateSnapshotRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.pubsub.v1.CreateSnapshotRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.pubsub.v1.CreateSnapshotRequest = _builder.build()

    /**
     * <pre>
     * Required. User-provided name for this snapshot. If the name is not provided
     * in the request, the server will assign a random name for this snapshot on
     * the same project as the subscription. Note that for REST API requests, you
     * must specify a name.  See the &lt;a
     * href="https://cloud.google.com/pubsub/docs/admin#resource_names"&gt; resource
     * name rules&lt;/a&gt;. Format is `projects/{project}/snapshots/{snap}`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
     */
    var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <pre>
     * Required. User-provided name for this snapshot. If the name is not provided
     * in the request, the server will assign a random name for this snapshot on
     * the same project as the subscription. Note that for REST API requests, you
     * must specify a name.  See the &lt;a
     * href="https://cloud.google.com/pubsub/docs/admin#resource_names"&gt; resource
     * name rules&lt;/a&gt;. Format is `projects/{project}/snapshots/{snap}`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
     */
    fun clearName() {
      _builder.clearName()
    }

    /**
     * <pre>
     * Required. The subscription whose backlog the snapshot retains.
     * Specifically, the created snapshot is guaranteed to retain:
     *  (a) The existing backlog on the subscription. More precisely, this is
     *      defined as the messages in the subscription's backlog that are
     *      unacknowledged upon the successful completion of the
     *      `CreateSnapshot` request; as well as:
     *  (b) Any messages published to the subscription's topic following the
     *      successful completion of the CreateSnapshot request.
     * Format is `projects/{project}/subscriptions/{sub}`.
     * </pre>
     *
     * <code>string subscription = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
     */
    var subscription: kotlin.String
      @JvmName("getSubscription")
      get() = _builder.getSubscription()
      @JvmName("setSubscription")
      set(value) {
        _builder.setSubscription(value)
      }
    /**
     * <pre>
     * Required. The subscription whose backlog the snapshot retains.
     * Specifically, the created snapshot is guaranteed to retain:
     *  (a) The existing backlog on the subscription. More precisely, this is
     *      defined as the messages in the subscription's backlog that are
     *      unacknowledged upon the successful completion of the
     *      `CreateSnapshot` request; as well as:
     *  (b) Any messages published to the subscription's topic following the
     *      successful completion of the CreateSnapshot request.
     * Format is `projects/{project}/subscriptions/{sub}`.
     * </pre>
     *
     * <code>string subscription = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
     */
    fun clearSubscription() {
      _builder.clearSubscription()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class LabelsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * See &lt;a href="https://cloud.google.com/pubsub/docs/labels"&gt; Creating and
     * managing labels&lt;/a&gt;.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
     val labels: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, LabelsProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getLabelsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getLabelsMap()
      )
    /**
     * <pre>
     * See &lt;a href="https://cloud.google.com/pubsub/docs/labels"&gt; Creating and
     * managing labels&lt;/a&gt;.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    @JvmName("putLabels")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, LabelsProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putLabels(key, value)
       }
    /**
     * <pre>
     * See &lt;a href="https://cloud.google.com/pubsub/docs/labels"&gt; Creating and
     * managing labels&lt;/a&gt;.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setLabels")
    inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, LabelsProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <pre>
     * See &lt;a href="https://cloud.google.com/pubsub/docs/labels"&gt; Creating and
     * managing labels&lt;/a&gt;.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeLabels")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, LabelsProxy>
      .remove(key: kotlin.String) {
         _builder.removeLabels(key)
       }
    /**
     * <pre>
     * See &lt;a href="https://cloud.google.com/pubsub/docs/labels"&gt; Creating and
     * managing labels&lt;/a&gt;.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllLabels")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, LabelsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllLabels(map)
       }
    /**
     * <pre>
     * See &lt;a href="https://cloud.google.com/pubsub/docs/labels"&gt; Creating and
     * managing labels&lt;/a&gt;.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearLabels")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, LabelsProxy>
      .clear() {
         _builder.clearLabels()
       }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.google.pubsub.v1.CreateSnapshotRequest.copy(block: com.google.pubsub.v1.CreateSnapshotRequestKt.Dsl.() -> Unit): com.google.pubsub.v1.CreateSnapshotRequest =
  com.google.pubsub.v1.CreateSnapshotRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
